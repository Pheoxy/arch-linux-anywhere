### This is the Arch Linux Anywhere configuration file it is
### responsible for defining some variables in the Arch Anywhere
### installer. This file generally should not be edited unless
### for a very specific purpose.
###
### Arch Anywhere translators may, if they wish, copy the
### software messages in the catagories listed below into their
### translation. You may copy the variables and paste them at
### the bottom of the 'menu_msg' function in your translation.
###
### Copyright (C) 2016  Dylan Schacht
###
### By: Deadhead (Dylan Schacht)
### Email: deadhead3492@gmail.com
### Webpage: http://arch-anywhere.org
###
### Any questions, comments, or bug reports may be sent to above
### email address. Enjoy, and keep on using Arch.
###############################################################

title=" -| archNAS Linux |- "
backtitle=" -| archNAS Linux Installer |- "

config() {
### Set default variables
ARCH=/mnt
wifi=false
SWAP=false
crypted=false
GPT=false
UEFI=false
swapped=false
mounted=false
INSTALLED=false
bootloader=false
hostname_set=false
user_added=false
pac_update=false
frmt=false
input=default
net_menu=false
btrfs=true
vfat=false
enable_bt=false
enable_f2fs=false
enable_btrfs=false
enable_nm=false
esp_warn=false
software_selected=false
de_config=false
dm_set=false
enable_dm=false
err=false
skip=false
manual_part=default
desktop=false
export reload=false
exclude_man=false
menu_enter=false
created_user=root
colors=true

### Set default shell
sh=/bin/bash

### Set term color valules
Green=$'\e[0;32m';
Yellow=$'\e[0;33m';
Red=$'\e[0;31m';
ColorOff=$'\e[0m';

## Get options
case "$opt" in
	-h|--help) usage ; exit ;;
	-e|--exclude) exclude_man=true ;;
	-n|--no-style) colors=false ;;
esac

if "$colors" ; then
	### Set installer default color scheme
	echo -en "\e]P0073642" #black
	echo -en "\e]P8002B36" #darkgrey
	echo -en "\e]P1DC322F" #darkred
	echo -en "\e]P9CB4B16" #red
	echo -en "\e]P2859900" #darkgreen
	echo -en "\e]PA586E75" #green
	echo -en "\e]P3B58900" #brown
	echo -en "\e]PB657B83" #yellow
	echo -en "\e]P4268BD2" #darkblue
	echo -en "\e]PC839496" #blue
	echo -en "\e]P5D33682" #darkmagenta
	echo -en "\e]PD6C71C4" #magenta
	echo -en "\e]P62AA198" #darkcyan
	echo -en "\e]PE93A1A1" #cyan
	echo -en "\e]P7EEE8D5" #lightgrey
	echo -en "\e]PFFDF6E3" #white
	setterm -background black -store
	setterm -foreground white -store
	clear
else
	mv /root/.dialogrc /root/.dialogrc-disabled
fi

### Added FS messages
fs6="F2FS File System"

### Software messages

### Internet
net0="Network Interface Managment"
net1="Console torrent client"

### Text editor
edit0="Console Text Editor fork of vi"

### Shell
shell0="DASH command shell"
shell1="Fish command shell"
shell2="Korn command shell"
shell3="tcsh/C command Shell"
shell4="Z-Shell command shell"

### System
sys0="Arch wiki from the CLI"
sys1="Apache Web Server"
sys2="Source control management"
sys3="CLI process Info"
sys4="Command line hardware info"
sys5="CLI network analyzer"
sys6="Secure Shell Deamon"
sys7="Uncomplicated Firewall"
sys8="Wget CLI downloader"
sys9="Console-based file manager"
sys10="Pacman mirrorlist update util"

### Check framebuffer line height
if [ "$(tput lines)" -lt "25" ]; then
	screen_h=false
else
	screen_h=true
fi

### Check if system is a vm
if (ls -l /dev/disk/by-id | grep "VBOX" &> /dev/null); then
	VBOX=true
else
	VBOX=false
fi

### Check if install media is USB
if (lsblk | grep "run" | grep -o "sd." &> /dev/null); then
	USB=$(lsblk | grep "run" | grep -o "sd.")
else
	USB="none"
fi

### Check for bluetooth device
if (dmesg | grep -i "blue" &> /dev/null); then
	bluetooth=true
else
	bluetooth=false
fi

### List of timezones
zonelist=$(find /usr/share/zoneinfo -maxdepth 1 | sed -n -e 's!^.*/!!p' | grep -v "posix\|right\|zoneinfo\|zone.tab\|zone1970.tab\|W-SU\|WET\|posixrules\|MST7MDT\|iso3166.tab\|CST6CDT" | sort | sed 's/$/ -/g')

### Full list of locales
localelist=$(</etc/locale.gen  grep -F ".UTF-8" | awk '{print $1" ""-"}' | sed 's/#//')

### List of countries for mirrorlist update
countries=$(echo -e "AT Austria\n AU  Australia\n BE Belgium\n BG Bulgaria\n BR Brazil\n BY Belarus\n CA Canada\n CL Chile \n CN China\n CO Columbia\n CZ Czech-Republic\n DE Germany\n DK Denmark\n EE Estonia\n ES Spain\n FI Finland\n FR France\n GB United-Kingdom\n HU Hungary\n IE Ireland\n IL Isreal\n IN India\n IT Italy\n JP Japan\n KR Korea\n KZ Kazakhstan\n LK Sri-Lanka\n LU Luxembourg\n LV Lativia\n MK Macedonia\n NC New-Caledonia\n NL Netherlands\n NO Norway\n NZ New-Zealand\n PL Poland\n PT Portugal\n RO Romania\n RS Serbia\n RU Russia\n SE Sweden\n SG Singapore\n SK Slovakia\n TR Turkey\n TW Taiwan\n UA Ukraine\n US United-States\n UZ Uzbekistan\n VN Viet-Nam\n ZA South-Africa")

### Full list of keymaps
key_maps=$(find /usr/share/kbd/keymaps -type f | sed -n -e 's!^.*/!!p' | grep ".map.gz" | sed 's/.map.gz//g' | sed 's/$/ -/g')

### Original list of mountpoints for manual partitioning
points_orig=$(echo -e "/boot   boot-mountpoint>\n/home   home-mountpoint>\n/opt   opt-mountpoint>\n/srv   srv-mountpoint>\n/usr    usr-mountpoint>\n/var    var-mountpoint>\nSWAP   swap-filesystem>")

### Check for wifi network
wifi_network=$(ip addr | grep "wlp" | awk '{print $2}' | sed 's/://' | head -n 1)

### 1MB link for internet speed test
test_link="ftp://speedtest:speedtest@ftp.otenet.gr/test1Mb.db"

### Check system architecture
arch=$(uname -a | grep -o "x86_64\|i386\|i686")
}

usage() {
echo " ${Green}Arch Anywhere -"
echo " ${Yellow}Simplify the Arch install process"
echo
echo " An install script making it easy for you to install Arch - Anywhere."
echo " Usage: ${Green}'archNAS [opts]'"
echo
echo " ${Yellow}Options:"
echo "		${Green}'-e' '--exclude' ${Yellow}- Exclude man pages from base install"
echo "		(This option is not recommended but will speed up install)"
echo
echo "		${Green}'-h' '--help' ${Yellow}- Display this help message"
echo
echo "		${Green}'-n' '--no-style' ${Yellow}- Disable installer style"
echo "		(Not recommended)${ColorOff}"
echo
}

config
